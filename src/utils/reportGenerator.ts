
export const generatePDFReport = async (analysisData: any) => {
  const doc = `
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>StackCompass Analysis Report</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; color: #333; }
        .header { text-align: center; border-bottom: 3px solid #8b5cf6; padding-bottom: 20px; margin-bottom: 30px; }
        .logo { color: #8b5cf6; font-size: 24px; font-weight: bold; margin-bottom: 10px; }
        .title { font-size: 28px; margin: 0; color: #1f2937; }
        .subtitle { color: #6b7280; margin: 5px 0; }
        .score-section { background: linear-gradient(135deg, #8b5cf6, #ec4899); color: white; padding: 20px; border-radius: 10px; text-align: center; margin: 20px 0; }
        .score-number { font-size: 48px; font-weight: bold; margin: 0; }
        .score-label { font-size: 18px; margin: 0; }
        .section { margin: 30px 0; }
        .section-title { font-size: 20px; color: #1f2937; border-bottom: 2px solid #e5e7eb; padding-bottom: 5px; margin-bottom: 15px; }
        .metric { display: inline-block; background: #f3f4f6; padding: 10px 15px; margin: 5px; border-radius: 5px; }
        .metric-value { font-weight: bold; color: #8b5cf6; }
        .insight { background: #f9fafb; border-left: 4px solid #8b5cf6; padding: 15px; margin: 10px 0; }
        .file-analysis { background: #f9fafb; border: 1px solid #e5e7eb; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .file-name { font-weight: bold; color: #1f2937; margin-bottom: 10px; }
        .footer { text-align: center; margin-top: 50px; padding-top: 20px; border-top: 1px solid #e5e7eb; color: #6b7280; }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">ðŸ§­ StackCompass</div>
        <h1 class="title">AI-Powered Codebase Analysis Report</h1>
        <div class="subtitle">${analysisData.repo_url || analysisData.file_name || 'Repository Analysis'}</div>
        <div class="subtitle">Generated on ${new Date(analysisData.created_at).toLocaleDateString()}</div>
    </div>

    <div class="score-section">
        <div class="score-number">${analysisData.stack_score || 'N/A'}</div>
        <div class="score-label">Stack Score out of 10</div>
    </div>

    <div class="section">
        <h2 class="section-title">Overview</h2>
        <div class="metric">
            <span>Files Analyzed: </span>
            <span class="metric-value">${Array.isArray(analysisData.file_insights) ? analysisData.file_insights.length : 0}</span>
        </div>
        <div class="metric">
            <span>Languages: </span>
            <span class="metric-value">${analysisData.tech_stack?.languages ? Object.keys(analysisData.tech_stack.languages).length : 0}</span>
        </div>
        <div class="metric">
            <span>Status: </span>
            <span class="metric-value">${analysisData.status}</span>
        </div>
    </div>

    ${analysisData.summary ? `
    <div class="section">
        <h2 class="section-title">Summary</h2>
        <p>${analysisData.summary}</p>
    </div>
    ` : ''}

    ${analysisData.tech_stack?.languages ? `
    <div class="section">
        <h2 class="section-title">Language Distribution</h2>
        ${Object.entries(analysisData.tech_stack.languages).map(([lang, count]) => `
            <div class="metric">
                <span>${lang.toUpperCase()}: </span>
                <span class="metric-value">${count} files</span>
            </div>
        `).join('')}
    </div>
    ` : ''}

    ${Array.isArray(analysisData.suggestions) && analysisData.suggestions.length > 0 ? `
    <div class="section">
        <h2 class="section-title">AI Insights & Recommendations</h2>
        ${analysisData.suggestions.map((suggestion: string) => `
            <div class="insight">${suggestion}</div>
        `).join('')}
    </div>
    ` : ''}

    ${Array.isArray(analysisData.file_insights) && analysisData.file_insights.length > 0 ? `
    <div class="section">
        <h2 class="section-title">File-by-File Analysis</h2>
        ${analysisData.file_insights.map((file: any) => `
            <div class="file-analysis">
                <div class="file-name">${file.file} - Score: ${file.score}/10</div>
                <div>${file.analysis}</div>
            </div>
        `).join('')}
    </div>
    ` : ''}

    <div class="footer">
        <p>Generated by StackCompass - AI-Powered Codebase Analysis</p>
        <p>Visit stackcompass.ai for more insights</p>
    </div>
</body>
</html>
  `;

  // Create a blob and download
  const blob = new Blob([doc], { type: 'text/html' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `stackcompass-analysis-${analysisData.id}.html`;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};

export const generateWordReport = async (analysisData: any) => {
  const content = `
STACKCOMPASS ANALYSIS REPORT
============================

Repository: ${analysisData.repo_url || analysisData.file_name || 'Repository Analysis'}
Generated: ${new Date(analysisData.created_at).toLocaleDateString()}
Stack Score: ${analysisData.stack_score || 'N/A'}/10

OVERVIEW
--------
Files Analyzed: ${Array.isArray(analysisData.file_insights) ? analysisData.file_insights.length : 0}
Languages: ${analysisData.tech_stack?.languages ? Object.keys(analysisData.tech_stack.languages).length : 0}
Status: ${analysisData.status}

${analysisData.summary ? `
SUMMARY
-------
${analysisData.summary}
` : ''}

${analysisData.tech_stack?.languages ? `
LANGUAGE DISTRIBUTION
--------------------
${Object.entries(analysisData.tech_stack.languages).map(([lang, count]) => `${lang.toUpperCase()}: ${count} files`).join('\n')}
` : ''}

${Array.isArray(analysisData.suggestions) && analysisData.suggestions.length > 0 ? `
AI INSIGHTS & RECOMMENDATIONS
-----------------------------
${analysisData.suggestions.map((suggestion: string, index: number) => `${index + 1}. ${suggestion}`).join('\n\n')}
` : ''}

${Array.isArray(analysisData.file_insights) && analysisData.file_insights.length > 0 ? `
FILE-BY-FILE ANALYSIS
--------------------
${analysisData.file_insights.map((file: any) => `
${file.file} (Score: ${file.score}/10)
${'-'.repeat(file.file.length + 20)}
${file.analysis}
`).join('\n')}
` : ''}

Generated by StackCompass - AI-Powered Codebase Analysis
Visit stackcompass.ai for more insights
  `;

  const blob = new Blob([content], { type: 'text/plain' });
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = `stackcompass-analysis-${analysisData.id}.txt`;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
};
